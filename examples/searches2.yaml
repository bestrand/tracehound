kind: Search
metadata:
  name: services-search
spec:
  searches:
    - name: service1
      dbRules:
        - dbType: postgresql
          allowedStatements:
            - INSERT INTO users (name, age) VALUES (?, ?)
      protocolRules:
        - protocol: http
          allowedMethods:
            - GET
            - POST
          allowedPathPrefixes:
            - /api/v1/
      codeRules:
        - language: java
          allowedFunctions:
            - com.example.myservice.UserService.createUser
    - name: service2
      dbRules:
        - dbType: mysql
          allowedStatements:
            - INSERT INTO customers (name, address) VALUES (?, ?)
      protocolRules:
        - protocol: grpc
      codeRules:
        - language: go
          allowedFunctions:
            - myservice.CreateOrder
            - myservice.UpdateOrder
    - name: service3
      dbRules:
        - dbType: mongodb
          allowedStatements:
            - db.users.find()
            - db.users.insert()
      protocolRules:
        - protocol: http
          allowedMethods:
            - GET
            - POST
            - PUT
          allowedPathPrefixes:
            - /api/v1/
      codeRules:
        - language: java
          allowedFunctions:
            - com.example.myservice.OrderService.createOrder
            - com.example.myservice.OrderService.updateOrder
    - name: service4
      dbRules:
        - dbType: postgresql
          allowedStatements:
            - INSERT INTO products (name, price) VALUES (?, ?)
      protocolRules:
        - protocol: http
          allowedMethods:
            - GET
            - POST
          allowedPathPrefixes:
            - /api/v1/
      codeRules:
        - language: go
          allowedFunctions:
            - myservice.CreateProduct
            - myservice.UpdateProduct
    - name: service5
      dbRules:
        - dbType: mysql
          allowedStatements:
            - INSERT INTO orders (customer_id, product_id, quantity) VALUES (?, ?, ?)
      protocolRules:
        - protocol: http
          allowedMethods:
            - GET
            - POST
          allowedPathPrefixes:
            - /api/v1/
      codeRules:
        - language: java
          allowedFunctions:
            - com.example.myservice.OrderService.createOrder
            - com.example.myservice.OrderService.updateOrder
